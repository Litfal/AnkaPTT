<Window x:Class="AnkaPTT.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:cef="clr-namespace:CefSharp.Wpf;assembly=CefSharp.Wpf"
        xmlns:local="clr-namespace:AnkaPTT"
        xmlns:localui="clr-namespace:AnkaPTT.UI"
        mc:Ignorable="d"
        Title="AnkaPTT" Height="600" Width="1280">
    <Window.Resources>
        <Color x:Key="ForegroundColor">#FFDDDDDD</Color>
        <Color x:Key="BorderMediumColor">#FF888888</Color>
        <Color x:Key="SelectedBackgroundColor">#FF404040</Color>
        <Color x:Key="SelectedUnfocusedColor">#FF404040</Color>
        <Color x:Key="CommonBackgroundColor">#FF000000</Color>
        
        <SolidColorBrush x:Key="ForegroundBrush" Color="{StaticResource ForegroundColor}"></SolidColorBrush>
        <SolidColorBrush x:Key="PushDateTimeBrush" Color="#BBB"></SolidColorBrush>
        <SolidColorBrush x:Key="CommonBackgroundBrush" Color="{StaticResource CommonBackgroundColor}"></SolidColorBrush>
        <SolidColorBrush x:Key="IdBrush" Color="#FF6"></SolidColorBrush>
        <SolidColorBrush x:Key="ContentBrush" Color="#990"></SolidColorBrush>
        <Style TargetType="CheckBox">
            <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
        </Style>
        <Style TargetType="TextBox">
            <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
            <Setter Property="Background" Value="{StaticResource CommonBackgroundBrush}" />
        </Style>
        <Style TargetType="localui:DateTimeTextBox">
            <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
            <Setter Property="Background" Value="{StaticResource CommonBackgroundBrush}" />
        </Style>
        <Style TargetType="localui:IntTextBox">
            <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
            <Setter Property="Background" Value="{StaticResource CommonBackgroundBrush}" />
        </Style>
        <Style TargetType="TextBlock">
            <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style>
        <Style x:Key="{x:Type ListView}" TargetType="ListView">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
            <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListView">
                        <Border Name="Border" BorderThickness="1" Background="{StaticResource CommonBackgroundBrush}">
                            <Border.BorderBrush>
                                <SolidColorBrush Color="{StaticResource BorderMediumColor}" />
                            </Border.BorderBrush>
                            <ScrollViewer Style="{DynamicResource {x:Static GridView.GridViewScrollViewerStyleKey}}">
                                <ItemsPresenter />
                            </ScrollViewer>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsGrouping" Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="Border" Property="Background">
                                    <Setter.Value>
                                        <SolidColorBrush Color="{DynamicResource DisabledBorderLightColor}" />
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="{x:Type ListViewItem}" TargetType="ListViewItem">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">
                        <Border x:Name="Border" Padding="2" SnapsToDevicePixels="true" Background="Transparent">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver" />
                                    <VisualState x:Name="Disabled" />
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="SelectionStates">
                                    <VisualState x:Name="Unselected" />
                                    <VisualState x:Name="Selected">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource SelectedBackgroundColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="SelectedUnfocused">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource SelectedUnfocusedColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <GridViewRowPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid Margin="3" Background="{StaticResource CommonBackgroundBrush}">
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <Grid Margin="0,0,0,3" Grid.Row="0" >
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"></ColumnDefinition>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
            </Grid.ColumnDefinitions>
            <TextBox Grid.Column="0" x:Name="txt_url" KeyUp="txt_url_KeyUp" HorizontalAlignment="Stretch" >
                https://www.ptt.cc/bbs/C_Chat/M.1539521892.A.1C4.html
            </TextBox>
            <Button Grid.Column="1" Click="Refresh_Click">　→　</Button>
            <CheckBox Grid.Column="2" Checked="AutoRefresh_Checked" Unchecked="AutoRefresh_Unchecked">自動重新載入</CheckBox>
        </Grid>
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"></ColumnDefinition>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="*"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <cef:ChromiumWebBrowser Visibility="Visible" x:Name="wb_main" Grid.Column="0" Margin="0,0,5,0" Background="Black"
                                    FrameLoadEnd="wb_main_FrameLoadEnd" FrameLoadStart="wb_main_FrameLoadStart" Grid.ColumnSpan="2"></cef:ChromiumWebBrowser>
            <!--<WebBrowser x:Name="wb_main" Grid.Column="0" Margin="0,0,5,0"></WebBrowser>-->
            <GridSplitter Grid.Column="1" Background="Transparent"                
                          HorizontalAlignment="Right" VerticalAlignment="Stretch" Width="5"/>
            <Grid Grid.Column="2" >
                <Grid.RowDefinitions>
                    <RowDefinition></RowDefinition>
                    <RowDefinition Height="auto"></RowDefinition>
                </Grid.RowDefinitions>
                <ListView Grid.Row="0" ItemsSource="{Binding ViewPushCollection}" MouseDoubleClick="ListView_MouseDoubleClick" >
                    <ListView.View>
                        <GridView>
                            <GridViewColumn Header="T" Width="25px">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Tag}" HorizontalAlignment="Left" Foreground="{Binding TagBrush}" />
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn Header="Id" Width="105px">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Userid}" HorizontalAlignment="Left" Foreground="{StaticResource IdBrush}"/>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn Width="380px">
                                <GridViewColumn.HeaderTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="Content" HorizontalAlignment="Left"  />
                                    </DataTemplate>
                                </GridViewColumn.HeaderTemplate>
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Content}" Foreground="{StaticResource ContentBrush}" HorizontalAlignment="Left" />
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn Width="50px">
                                <GridViewColumn.HeaderTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="Time" HorizontalAlignment="Left"  />
                                    </DataTemplate>
                                </GridViewColumn.HeaderTemplate>
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Time}" Foreground="{StaticResource PushDateTimeBrush}" HorizontalAlignment="Right" />
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                        </GridView>
                    </ListView.View>
                </ListView>
                <GridSplitter Grid.Row="0" Background="Transparent"                
                          HorizontalAlignment="Stretch" VerticalAlignment="Bottom" Height="5"/>
                <Border Grid.Row="1" BorderThickness="1" BorderBrush="{StaticResource ForegroundBrush}"  >
                    <StackPanel DataContext="{Binding FilterViewModel}" >

                        <WrapPanel Margin="5">
                            <WrapPanel Margin="0,0,8,0">
                                <CheckBox IsChecked="{Binding EnabledStartTime, Mode=TwoWay}">開始時間</CheckBox>
                                <localui:DateTimeTextBox Value="{Binding StartTime, Mode=TwoWay}" />
                            </WrapPanel>
                            <WrapPanel Margin="0,0,8,0">
                                <CheckBox IsChecked="{Binding EnabledEndTime, Mode=TwoWay}">結束時間</CheckBox>
                                <localui:DateTimeTextBox Value="{Binding EndTime, Mode=TwoWay}" />
                            </WrapPanel>
                            <WrapPanel Margin="0,0,8,0">
                                <CheckBox IsChecked="{Binding EnableContainsText, Mode=TwoWay}">包含下列文字</CheckBox>
                                <TextBox MinWidth="30" Text="{Binding ContainsText}" />
                            </WrapPanel>
                        </WrapPanel>
                        <WrapPanel Margin="5">
                            <TextBlock>第</TextBlock>
                            <localui:IntTextBox Value="{Binding BeginAt, Mode=TwoWay}" MaxValue="9999" MinValue="1" />
                            <TextBlock>個開始, 間隔</TextBlock>
                            <localui:IntTextBox Value="{Binding Step, Mode=TwoWay}" MaxValue="100" MinValue="0" />
                            <TextBlock>個</TextBlock>

                        </WrapPanel>
                        <WrapPanel Margin="5">
                            <CheckBox Margin="0,0,8,0" IsChecked="{Binding ContainsPush}">推</CheckBox>
                            <CheckBox Margin="0,0,8,0" IsChecked="{Binding ContainsUnlike}">噓</CheckBox>
                            <CheckBox Margin="0,0,8,0" IsChecked="{Binding ContainsArrow}">箭頭</CheckBox>
                            <CheckBox Margin="0,0,8,0" IsChecked="{Binding ExcludeSameId}">排除重複的ID</CheckBox>
                        </WrapPanel>
                        <WrapPanel Margin="5">
                            <TextBlock>完全相同</TextBlock>
                            <localui:IntTextBox Value="{Binding SameTimes, Mode=TwoWay}" MaxValue="9" MinValue="0" />
                            <TextBlock>次以上 (0與1等同此功能關閉)</TextBlock>
                        </WrapPanel>
                        <WrapPanel Margin="5">
                            <TextBlock>取</TextBlock>
                            <localui:IntTextBox Value="{Binding TakeCount, Mode=TwoWay}" MinValue="0" MaxValue="9999" />
                            <TextBlock>組結果 (0為所有結果)</TextBlock>
                        </WrapPanel>
                        <WrapPanel Margin="5">
                            <CheckBox Margin="0,0,8,0" IsChecked="{Binding HighlightResults}">於網頁內強調篩選結果</CheckBox>
                            <CheckBox Margin="0,0,8,0" IsChecked="{Binding ReverseView}">反向檢視推文</CheckBox>
                        </WrapPanel>
                    </StackPanel>
                </Border>
            </Grid>
        </Grid>
    </Grid>
</Window>
